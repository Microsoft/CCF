jobs:
- job: Checks
  displayName: 'Formatting and License Checks'

  ${{ insert }}: ${{ parameters.env }}

  steps:
    - checkout: self
      clean: true
      submodules: true

    - script: |
        git_tag=`git describe --tags --abbrev=0`
        git_tag=${git_tag#v}
        cmake_version=`grep CCF_VERSION CMakeLists.txt | grep -Po "(\d)+\.(\d)+\.(\d)+"`
        if [[ $git_tag != $cmake_version ]]; then
          echo "Git tag version ($git_tag) does not match CMake project version ($cmake_version)"
          exit 1
        fi
      displayName: 'Check version matches in CMake and git tag'
      condition: succeededOrFailed()

    - script: find . -type f -regex ".*\.sh$" | egrep -v "^./3rdparty/" | xargs shellcheck -s bash -e SC2044,SC2002,SC1091
      displayName: 'Shell Check'
      condition: succeededOrFailed()

    - script: ./check-todo.sh src
      displayName: 'Check for TODOs'
      condition: succeededOrFailed()

    - script: ./check-format.sh src samples
      displayName: 'Check C++ code format'
      condition: succeededOrFailed()

    - script: python3.7 notice-check.py
      displayName: 'Check CCF copyright notices'
      condition: succeededOrFailed()

    - script: |
        python3.7 -m venv env
        source env/bin/activate
        pip install black
        black --check sphinx/ tests/ notice-check.py
      displayName: 'Check Python code format'
      condition: succeededOrFailed()

    - script: |
        source env/bin/activate
        pip install cmake_format
        cmake-format --check CMakeLists.txt $(find ./cmake ./samples ./src ./tests -name "*.cmake" | tr "\n" " ")
      displayName: 'Check CMake code format'
      condition: succeededOrFailed()
