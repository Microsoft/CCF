Ledger and Snapshots Management
===============================

TODO: Link to audit section

Ledger
------

The ledger is the persistent replicated append-only record of the transactions that have been executed by the CCF service. It is written by the primary node when a transaction is executed and replicated to all backups which maintain their own duplicated copy. Each node in a network creates and maintains its own local copy of the ledger. Committed entries are always identical between all nodes, but a node may be more or less up to date, and uncommitted entries may differ.

The ledger is split into multiple files (or chunks) written by a node in the directory specified by the ``--ledger-dir`` command line argument to ``cchost``. Even though there are multiple ledger files on disk, there is only one unique `logical` ledger file for the lifetime of a CCF service (and across recoveries). The `logical` ledger can be reconstituted by parsing the ledger files in sequence, based on the sequence number included in their file names.

TODO:
- Chunking
- Committed vs. un-committed files
- --ledger-dir vs --read-only-ledger-dir

File Layout
~~~~~~~~~~~



TODO:
- Both --ledger-dir and --read-only-ledger-dir directories

- Join from snapshot
- Recover from snapshot
- Snapshot evidence # in snapshot name, check that snapshot evidence is in a ledger file available.

- Best practice: regularly backup .committed files and copy/mount it to --read-only-ledger-dir when joining/recovering.

Snapshots
---------

Joining from Snapshot
---------------------

When a node has successfully joined a network, the entire transaction history is automatically replicated to this new node. Depending on the number of historical transactions, this process can take some non-negligible period of time, preventing the new node to quickly take part in the consensus.

To avoid this, it is possible for a new node to join from an existing snapshot of the recent CCF state. In this case, only historical transactions between the version at which the snapshot was taken and the current state will be replicated.

Snapshots are generated at regular intervals by the current primary node and stored under the directory specified via the ``--snapshot-dir`` CLI option (defaults to ``snapshots/``). The transaction interval at which snapshots are generated is specified via the ``--snapshot-tx-interval`` CLI option (defaults to no snapshot).

.. note:: Because the generation of a snapshot :ref:`requires a new ledger chunk to be created <audit/ledger:File Layout>` , all nodes in the network must be started with the same ``--snapshot-tx-interval`` value.

Once a snapshot has been generated by the primary, operators can copy or mount the snapshot directory to the new node directory before it is started. On start-up, the new node will automatically resume from the latest available snapshot file in the ``--snapshot-dir`` directory. If no snapshot file is found, all historical transactions will be replicated to that node.

To validate the snapshot a node joins, the node first deserialises the transactions in the ledger following the snapshot until the proof that the snapshot was committed by the service to join is found. This process requires operators to copy the ledger suffix . The validation procedure is generally quick and the node will automatically join the service one the snapshot has been validated.

Nodes that started from a snapshot can still process historical queries if the historical ledger (i.e. the ledger files preceding the snapshot) is made accessible to the node via the ``--read-only-ledger-dir`` option. Although the read-only ledger directory must be specified to the node on start-up, the historical ledger files can be copied to this directory `after` the node is started.
