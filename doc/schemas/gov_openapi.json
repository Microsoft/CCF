{
  "components": {
    "schemas": {
      "CallerInfo": {
        "properties": {
          "caller_id": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "caller_id"
        ],
        "type": "object"
      },
      "CodeStatus": {
        "enum": [
          "ACCEPTED",
          "RETIRED"
        ]
      },
      "EndpointMetrics::Metric": {
        "properties": {
          "calls": {
            "$ref": "#/components/schemas/uint64"
          },
          "errors": {
            "$ref": "#/components/schemas/uint64"
          },
          "failures": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "calls",
          "errors",
          "failures"
        ],
        "type": "object"
      },
      "EndpointMetrics::Out": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/named_named_EndpointMetrics::Metric"
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object"
      },
      "GetCode::Out": {
        "properties": {
          "versions": {
            "$ref": "#/components/schemas/GetCode::Version_array"
          }
        },
        "required": [
          "versions"
        ],
        "type": "object"
      },
      "GetCode::Version": {
        "properties": {
          "digest": {
            "$ref": "#/components/schemas/string"
          },
          "status": {
            "$ref": "#/components/schemas/CodeStatus"
          }
        },
        "required": [
          "digest",
          "status"
        ],
        "type": "object"
      },
      "GetCode::Version_array": {
        "items": {
          "$ref": "#/components/schemas/GetCode::Version"
        },
        "type": "array"
      },
      "GetCommit::Out": {
        "properties": {
          "seqno": {
            "$ref": "#/components/schemas/int64"
          },
          "view": {
            "$ref": "#/components/schemas/int64"
          }
        },
        "required": [
          "view",
          "seqno"
        ],
        "type": "object"
      },
      "GetEncryptedRecoveryShare": {
        "properties": {
          "encrypted_recovery_share": {
            "$ref": "#/components/schemas/string"
          },
          "nonce": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "encrypted_recovery_share",
          "nonce"
        ],
        "type": "object"
      },
      "GetMetrics::HistogramResults": {
        "properties": {
          "buckets": {
            "$ref": "#/components/schemas/json"
          },
          "high": {
            "$ref": "#/components/schemas/int32"
          },
          "low": {
            "$ref": "#/components/schemas/int32"
          },
          "overflow": {
            "$ref": "#/components/schemas/uint64"
          },
          "underflow": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "low",
          "high",
          "overflow",
          "underflow",
          "buckets"
        ],
        "type": "object"
      },
      "GetMetrics::Out": {
        "properties": {
          "histogram": {
            "$ref": "#/components/schemas/GetMetrics::HistogramResults"
          },
          "tx_rates": {
            "$ref": "#/components/schemas/json"
          }
        },
        "required": [
          "histogram",
          "tx_rates"
        ],
        "type": "object"
      },
      "GetNetworkInfo::NodeInfo": {
        "properties": {
          "host": {
            "$ref": "#/components/schemas/string"
          },
          "node_id": {
            "$ref": "#/components/schemas/uint64"
          },
          "port": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "node_id",
          "host",
          "port"
        ],
        "type": "object"
      },
      "GetNetworkInfo::NodeInfo_array": {
        "items": {
          "$ref": "#/components/schemas/GetNetworkInfo::NodeInfo"
        },
        "type": "array"
      },
      "GetNetworkInfo::Out": {
        "properties": {
          "nodes": {
            "$ref": "#/components/schemas/GetNetworkInfo::NodeInfo_array"
          },
          "primary_id": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "nodes",
          "primary_id"
        ],
        "type": "object"
      },
      "GetNodesByRPCAddress::NodeInfo": {
        "properties": {
          "node_id": {
            "$ref": "#/components/schemas/uint64"
          },
          "status": {
            "$ref": "#/components/schemas/NodeStatus"
          }
        },
        "required": [
          "node_id",
          "status"
        ],
        "type": "object"
      },
      "GetNodesByRPCAddress::NodeInfo_array": {
        "items": {
          "$ref": "#/components/schemas/GetNodesByRPCAddress::NodeInfo"
        },
        "type": "array"
      },
      "GetNodesByRPCAddress::Out": {
        "properties": {
          "nodes": {
            "$ref": "#/components/schemas/GetNodesByRPCAddress::NodeInfo_array"
          }
        },
        "required": [
          "nodes"
        ],
        "type": "object"
      },
      "GetPrimaryInfo::Out": {
        "properties": {
          "current_view": {
            "$ref": "#/components/schemas/int64"
          },
          "primary_host": {
            "$ref": "#/components/schemas/string"
          },
          "primary_id": {
            "$ref": "#/components/schemas/uint64"
          },
          "primary_port": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "primary_id",
          "primary_host",
          "primary_port",
          "current_view"
        ],
        "type": "object"
      },
      "GetReceipt::Out": {
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "receipt"
        ],
        "type": "object"
      },
      "GetSchema::Out": {
        "properties": {
          "params_schema": {
            "$ref": "#/components/schemas/json_schema"
          },
          "result_schema": {
            "$ref": "#/components/schemas/json_schema"
          }
        },
        "required": [
          "params_schema",
          "result_schema"
        ],
        "type": "object"
      },
      "GetTxStatus::Out": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TxStatus"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "KVRead::In": {
        "properties": {
          "key": {
            "$ref": "#/components/schemas/json"
          },
          "table": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "table",
          "key"
        ],
        "type": "object"
      },
      "MemberAck": {
        "properties": {
          "signed_req": {
            "$ref": "#/components/schemas/SignedReq"
          },
          "state_digest": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "state_digest",
          "signed_req"
        ],
        "type": "object"
      },
      "NodeStatus": {
        "enum": [
          "PENDING",
          "TRUSTED",
          "RETIRED"
        ]
      },
      "Proposal": {
        "properties": {
          "parameter": {
            "$ref": "#/components/schemas/json"
          },
          "proposer": {
            "$ref": "#/components/schemas/uint64"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "state": {
            "$ref": "#/components/schemas/ProposalState"
          },
          "votes": {
            "$ref": "#/components/schemas/uint64_to_Script"
          }
        },
        "required": [
          "script",
          "parameter",
          "proposer",
          "state",
          "votes"
        ],
        "type": "object"
      },
      "ProposalInfo": {
        "properties": {
          "proposal_id": {
            "$ref": "#/components/schemas/uint64"
          },
          "proposer_id": {
            "$ref": "#/components/schemas/uint64"
          },
          "state": {
            "$ref": "#/components/schemas/ProposalState"
          }
        },
        "required": [
          "proposal_id",
          "proposer_id",
          "state"
        ],
        "type": "object"
      },
      "ProposalState": {
        "enum": [
          "OPEN",
          "ACCEPTED",
          "WITHDRAWN",
          "REJECTED",
          "FAILED"
        ]
      },
      "Propose::In": {
        "properties": {
          "ballot": {
            "$ref": "#/components/schemas/Script"
          },
          "parameter": {
            "$ref": "#/components/schemas/json"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          }
        },
        "required": [
          "script"
        ],
        "type": "object"
      },
      "Script": {
        "properties": {
          "bytecode": {
            "$ref": "#/components/schemas/uint8_array"
          },
          "text": {
            "$ref": "#/components/schemas/string"
          }
        },
        "type": "object"
      },
      "SignedReq": {
        "properties": {
          "md": {
            "$ref": "#/components/schemas/mbedtls_md_type_t"
          },
          "req": {
            "$ref": "#/components/schemas/uint8_array"
          },
          "request_body": {
            "$ref": "#/components/schemas/uint8_array"
          },
          "sig": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "sig",
          "req",
          "request_body",
          "md"
        ],
        "type": "object"
      },
      "StateDigest": {
        "properties": {
          "state_digest": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "state_digest"
        ],
        "type": "object"
      },
      "TxStatus": {
        "enum": [
          "UNKNOWN",
          "PENDING",
          "COMMITTED",
          "INVALID"
        ]
      },
      "VerifyReceipt::In": {
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "receipt"
        ],
        "type": "object"
      },
      "VerifyReceipt::Out": {
        "properties": {
          "valid": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        "required": [
          "valid"
        ],
        "type": "object"
      },
      "Vote": {
        "properties": {
          "ballot": {
            "$ref": "#/components/schemas/Script"
          }
        },
        "required": [
          "ballot"
        ],
        "type": "object"
      },
      "boolean": {
        "type": "boolean"
      },
      "int32": {
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "integer"
      },
      "int64": {
        "maximum": 9223372036854775807,
        "minimum": -9223372036854775808,
        "type": "integer"
      },
      "json": null,
      "json_schema": {
        "type": "object"
      },
      "mbedtls_md_type_t": {
        "enum": [
          "MBEDTLS_MD_NONE",
          "MBEDTLS_MD_SHA1",
          "MBEDTLS_MD_SHA256",
          "MBEDTLS_MD_SHA384",
          "MBEDTLS_MD_SHA512"
        ]
      },
      "named_EndpointMetrics::Metric": {
        "additionalProperties": {
          "$ref": "#/components/schemas/EndpointMetrics::Metric"
        },
        "type": "object"
      },
      "named_named_EndpointMetrics::Metric": {
        "additionalProperties": {
          "$ref": "#/components/schemas/named_EndpointMetrics::Metric"
        },
        "type": "object"
      },
      "string": {
        "type": "string"
      },
      "uint64": {
        "maximum": 18446744073709551615,
        "minimum": 0,
        "type": "integer"
      },
      "uint64_to_Script": {
        "items": {
          "items": [
            {
              "$ref": "#/components/schemas/uint64"
            },
            {
              "$ref": "#/components/schemas/Script"
            }
          ],
          "type": "array"
        },
        "type": "array"
      },
      "uint8": {
        "maximum": 255,
        "minimum": 0,
        "type": "integer"
      },
      "uint8_array": {
        "items": {
          "$ref": "#/components/schemas/uint8"
        },
        "type": "array"
      }
    }
  },
  "info": {
    "description": "Placeholder description",
    "title": "Placeholder title",
    "version": "1.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "ack": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDigest"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "ack/update_state_digest": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberAck"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "api": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "api/schema": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSchema::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "code": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCode::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "commit": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommit::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "endpoint_metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetrics::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMetrics::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "network_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkInfo::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "node/ids": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodesByRPCAddress::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "primary_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrimaryInfo::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Propose::In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals/{proposal_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposal"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals/{proposal_id}/complete": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals/{proposal_id}/votes": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vote"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals/{proposal_id}/votes/{member_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vote"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "proposals/{proposal_id}/withdraw": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "query": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "read": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KVRead::In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "receipt": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReceipt::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "receipt/verify": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyReceipt::In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyReceipt::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "recovery_share": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEncryptedRecoveryShare"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "recovery_share/submit": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/string"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "tx": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus::Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "user_id": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallerInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "/gov"
    }
  ]
}