{
  "components": {
    "schemas": {
      "CallerInfo": {
        "properties": {
          "caller_id": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "caller_id"
        ],
        "type": "object"
      },
      "CodeStatus": {
        "enum": [
          "ALLOWED_TO_JOIN"
        ],
        "type": "string"
      },
      "EndpointMetrics__Entry": {
        "properties": {
          "calls": {
            "$ref": "#/components/schemas/uint64"
          },
          "errors": {
            "$ref": "#/components/schemas/uint64"
          },
          "failures": {
            "$ref": "#/components/schemas/uint64"
          },
          "method": {
            "$ref": "#/components/schemas/string"
          },
          "path": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "path",
          "method",
          "calls",
          "errors",
          "failures"
        ],
        "type": "object"
      },
      "EndpointMetrics__Entry_array": {
        "items": {
          "$ref": "#/components/schemas/EndpointMetrics__Entry"
        },
        "type": "array"
      },
      "EndpointMetrics__Out": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/EndpointMetrics__Entry_array"
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object"
      },
      "GetCode__Out": {
        "properties": {
          "versions": {
            "$ref": "#/components/schemas/GetCode__Version_array"
          }
        },
        "required": [
          "versions"
        ],
        "type": "object"
      },
      "GetCode__Version": {
        "properties": {
          "digest": {
            "$ref": "#/components/schemas/string"
          },
          "status": {
            "$ref": "#/components/schemas/CodeStatus"
          }
        },
        "required": [
          "digest",
          "status"
        ],
        "type": "object"
      },
      "GetCode__Version_array": {
        "items": {
          "$ref": "#/components/schemas/GetCode__Version"
        },
        "type": "array"
      },
      "GetCommit__Out": {
        "properties": {
          "seqno": {
            "$ref": "#/components/schemas/int64"
          },
          "view": {
            "$ref": "#/components/schemas/int64"
          }
        },
        "required": [
          "view",
          "seqno"
        ],
        "type": "object"
      },
      "GetReceipt__Out": {
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "receipt"
        ],
        "type": "object"
      },
      "GetTxStatus__Out": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TxStatus"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "HistogramResults": {
        "properties": {
          "buckets": {
            "$ref": "#/components/schemas/json"
          },
          "high": {
            "$ref": "#/components/schemas/int32"
          },
          "low": {
            "$ref": "#/components/schemas/int32"
          },
          "overflow": {
            "$ref": "#/components/schemas/uint64"
          },
          "underflow": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "low",
          "high",
          "overflow",
          "underflow",
          "buckets"
        ],
        "type": "object"
      },
      "LoggingGet__Out": {
        "properties": {
          "msg": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "msg"
        ],
        "type": "object"
      },
      "LoggingRecord__In": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/uint64"
          },
          "msg": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "id",
          "msg"
        ],
        "type": "object"
      },
      "Report": {
        "properties": {
          "histogram": {
            "$ref": "#/components/schemas/HistogramResults"
          },
          "tx_rates": {
            "$ref": "#/components/schemas/json"
          }
        },
        "required": [
          "histogram",
          "tx_rates"
        ],
        "type": "object"
      },
      "TxStatus": {
        "enum": [
          "UNKNOWN",
          "PENDING",
          "COMMITTED",
          "INVALID"
        ],
        "type": "string"
      },
      "VerifyReceipt__In": {
        "properties": {
          "receipt": {
            "$ref": "#/components/schemas/uint8_array"
          }
        },
        "required": [
          "receipt"
        ],
        "type": "object"
      },
      "VerifyReceipt__Out": {
        "properties": {
          "valid": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        "required": [
          "valid"
        ],
        "type": "object"
      },
      "boolean": {
        "type": "boolean"
      },
      "int32": {
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "integer"
      },
      "int64": {
        "maximum": 9223372036854775807,
        "minimum": -9223372036854775808,
        "type": "integer"
      },
      "json": {},
      "string": {
        "type": "string"
      },
      "uint64": {
        "maximum": 18446744073709551615,
        "minimum": 0,
        "type": "integer"
      },
      "uint8": {
        "maximum": 255,
        "minimum": 0,
        "type": "integer"
      },
      "uint8_array": {
        "items": {
          "$ref": "#/components/schemas/uint8"
        },
        "type": "array"
      }
    },
    "securitySchemes": {
      "jwt": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      },
      "member_signature": {
        "description": "Request must be signed according to the HTTP Signature scheme. The signer must be a member identity registered with this service.",
        "scheme": "signature",
        "type": "http"
      },
      "user_signature": {
        "description": "Request must be signed according to the HTTP Signature scheme. The signer must be a user identity registered with this service.",
        "scheme": "signature",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "This CCF sample app implements a simple logging application, securely recording messages at client-specified IDs. It demonstrates most of the features available to CCF apps.",
    "title": "CCF Sample Logging App",
    "version": "0.0.1"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetrics__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/code": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCode__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/commit": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommit__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/custom_auth": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/local_tx": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "seqno",
            "required": false,
            "schema": {
              "maximum": 9223372036854775807,
              "minimum": -9223372036854775808,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "view",
            "required": false,
            "schema": {
              "maximum": 9223372036854775807,
              "minimum": -9223372036854775808,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/log/private": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "maximum": 18446744073709551615,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "maximum": 18446744073709551615,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingGet__Out"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRecord__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/log/private/admin_only": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRecord__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/log/private/anonymous": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRecord__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/log/private/historical": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "maximum": 18446744073709551615,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingGet__Out"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/log/private/prefix_cert": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRecord__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/log/private/raw_text/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "responses": {
          "200": {
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/log/public": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "maximum": 18446744073709551615,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": false,
            "schema": {
              "maximum": 18446744073709551615,
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggingGet__Out"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggingRecord__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/boolean"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "jwt": []
          }
        ]
      }
    },
    "/metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/multi_auth": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "user_signature": []
          },
          {
            "member_signature": []
          },
          {
            "jwt": []
          },
          {}
        ]
      }
    },
    "/receipt": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "commit",
            "required": false,
            "schema": {
              "maximum": 9223372036854775807,
              "minimum": -9223372036854775808,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReceipt__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/receipt/verify": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyReceipt__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyReceipt__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/tx": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "seqno",
            "required": false,
            "schema": {
              "maximum": 9223372036854775807,
              "minimum": -9223372036854775808,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "view",
            "required": false,
            "schema": {
              "maximum": 9223372036854775807,
              "minimum": -9223372036854775808,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/user_id": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "cert",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallerInfo"
                }
              }
            },
            "description": "Default response description"
          }
        },
        "security": [
          {
            "user_signature": []
          },
          {
            "member_signature": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "/app"
    }
  ]
}