trigger:
  batch: true
  branches:
    include:
      - "master"
      - "ci/*"
  paths:
    exclude:
      - 'README.md'
      - 'CCF-TECHNICAL-REPORT.pdf'
      - 'Doxyfile'
      - 'THIRD_PARTY_NOTICES.txt'
      - 'getting_started/'
      - 'sphinx/'
      - '.github/'
      - '.azure-pipelines-gh-pages.yml'
      - 'LICENSE'

pr:
  autoCancel: true
  branches:
    include:
      - master
  paths:
    include:
      - '*'
    exclude:
      - 'README.md'
      - 'CCF-TECHNICAL-REPORT.pdf'
      - 'Doxyfile'
      - 'THIRD_PARTY_NOTICES.txt'
      - 'getting_started/'
      - 'sphinx/'
      - '.github/'
      - '.azure-pipelines-gh-pages.yml'
      - 'LICENSE'

schedules:
- cron: "0 3 * * Mon-Fri"
  displayName: Daily morning build
  branches:
    include:
    - master
  always: true

jobs:
- template: .azure-pipelines-templates/matrix.yml

# - job: ACC_1804_SGX_perf_build
#   pool: Ubuntu-1804-DC4s
#   container:
#     image: ccfciteam/ccf-ci-18.04-oe-0.7.0-rc1-sgx:latest
#     # --publish-all enables end-to-end tests to communicate over ports
#     # --device /dev/sgx:/dev/sgx makes sgx available to the container
#     # -v $(log.path):$(log.path) mounts the local directory to the same path in the container
#     options: --publish-all --device /dev/sgx:/dev/sgx -v $(log.path):$(log.path)
#   steps:
#     - checkout: self
#       clean: true
#       submodules: true
#     - template: .azure-pipelines-templates/build.yml
#       parameters:
#         cmake_args: '-DBUILD_SMALLBANK=ON -DSERVICE_IDENTITY_CURVE_CHOICE=secp256k1_bitcoin'
#     - template: .azure-pipelines-templates/publish_build.yml
#       parameters:
#         artifact_name: perf_build_results

# - job: ACC_1804_SGX_perf_tests
#   pool: Ubuntu-1804-DC4s
#   container:
#     image: ccfciteam/ccf-ci-18.04-oe-0.7.0-rc1-sgx:latest
#     # --publish-all enables end-to-end tests to communicate over ports
#     # --device /dev/sgx:/dev/sgx makes sgx available to the container
#     # -v $(log.path):$(log.path) mounts the local directory to the same path in the container
#     options: --publish-all --device /dev/sgx:/dev/sgx -v $(log.path):$(log.path)
#   dependsOn:
#     - ACC_1804_SGX_perf_build
#   steps:
#     - checkout: self
#       clean: true
#       submodules: true
#     - template: .azure-pipelines-templates/download_build.yml
#       parameters:
#         artifact_name: perf_build_results
#     - template: .azure-pipelines-templates/test.yml
#       parameters:
#         suite_name_suffix: ' SGX Performance'
#         ctest_filter: '-L perf'
#     - template: .azure-pipelines-templates/push_perf_data.yml