diff --git a/quickjs.c b/quickjs.c
index 7da72531..4ca99a4f 100644
--- a/quickjs.c
+++ b/quickjs.c
@@ -34691,6 +34691,26 @@ int JS_SetModuleExportList(JSContext *ctx, JSModuleDef *m,
     return 0;
 }
 
+// https://www.freelists.org/post/quickjs-devel/Patch-Add-some-informations-to-get-more-informations-from-compiled-modules
+int JS_GetModuleExportEntriesCount(JSModuleDef *m)
+{
+    return m->export_entries_count;
+}
+
+JSValue JS_GetModuleExportEntry(JSContext *ctx, JSModuleDef *m, int idx)
+{
+    if (idx >= m->export_entries_count || idx < 0)
+        return JS_UNDEFINED;
+    return JS_DupValue(ctx, m->export_entries[idx].u.local.var_ref->value);
+}
+
+JSAtom JS_GetModuleExportEntryName(JSContext *ctx, JSModuleDef *m, int idx)
+{
+    if (idx >= m->export_entries_count || idx < 0)
+        return JS_ATOM_NULL;
+    return JS_DupAtom(ctx, m->export_entries[idx].export_name);
+}
+
 /* Note: 'func_obj' is not necessarily a constructor */
 static void JS_SetConstructor2(JSContext *ctx,
                                JSValueConst func_obj,
diff --git a/quickjs.h b/quickjs.h
index f6bfdb02..8381c7ea 100644
--- a/quickjs.h
+++ b/quickjs.h
@@ -999,6 +999,11 @@ int JS_SetModuleExport(JSContext *ctx, JSModuleDef *m, const char *export_name,
 int JS_SetModuleExportList(JSContext *ctx, JSModuleDef *m,
                            const JSCFunctionListEntry *tab, int len);
 
+// https://www.freelists.org/post/quickjs-devel/Patch-Add-some-informations-to-get-more-informations-from-compiled-modules
+int JS_GetModuleExportEntriesCount(JSModuleDef *m);
+JSValue JS_GetModuleExportEntry(JSContext *ctx, JSModuleDef *m, int idx);
+JSAtom JS_GetModuleExportEntryName(JSContext *ctx, JSModuleDef *m, int idx);
+
 #undef js_unlikely
 #undef js_force_inline
